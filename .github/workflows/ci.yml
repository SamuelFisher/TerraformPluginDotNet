name: CI
on: [push, pull_request, workflow_dispatch]

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Required for nbgv
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - name: Restore
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.2.6
        terraform_wrapper: false
    - name: Set TF_PLUGIN_DOTNET_TEST_TF_BIN (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: echo "TF_PLUGIN_DOTNET_TEST_TF_BIN=$(which terraform)" >> $GITHUB_ENV
    - name: Set TF_PLUGIN_DOTNET_TEST_TF_BIN (Windows)
      if: startsWith(matrix.os, 'windows')
      run: echo "TF_PLUGIN_DOTNET_TEST_TF_BIN=$(get-command terraform | select-object -ExpandProperty source)" >> $env:GITHUB_ENV
    - name: Functional tests
      run: dotnet test --no-restore --filter Category=Functional
    - name: E2E tests
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        dotnet publish samples/SampleProvider/SampleProvider/SampleProvider.csproj -r linux-x64 -c Release -p:PublishSingleFile=true 
        cp samples/SampleProvider/SampleProvider/bin/Release/net6.0/*.zip e2e/providers/example.com/example/sampleprovider
        cd e2e
        TF_LOG=TRACE TF_CLI_CONFIG_FILE=cli.tfrc terraform init
        TF_CLI_CONFIG_FILE=cli.tfrc terraform plan
    - name: Pack
      run: dotnet pack --no-restore --configuration Release -o packages
    - name: Upload packages as artefacts
      if: startsWith(matrix.os, 'windows')
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: packages/*.nupkg
        retention-days: 5
